{"version":3,"sources":["webpack:///bundle.min.js","webpack:///webpack/bootstrap 7398e4964ef460fae7f0","webpack:///./src/main.js","webpack:///./src/line/spline_stack.js","webpack:///./src/line/line.js","webpack:///./src/base.js","webpack:///./src/grid/calendar_grid.js","webpack:///./src/bar/composite.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_spline_stack","_calendar_grid","_composite","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_line","_line2","SplineStackChart","_LineChart","this","getPrototypeOf","apply","arguments","spline_stack","fnArea","d3","svg","area","x","d","x_scale","y","range_attr","y0","y_scale","y1","interpolate","interpolation","fnStack","layout","stack","values","fnColor","scale","category20","data","console","log","serialized_data","series","forEach","domain_attr","map","push","domain_extent","extent","range_max","max","serializeData","domain","select","y_axis","x_axis","selectAll","enter","append","transition","paths","applyData","exit","remove","attr","css_class","style","title","get","assign","DEFAULTS","time_series","_base","_base2","LineChart","_Chart","chart","linear","range","height","axis","orient","outerTickSize","time","width","line_chart","line","chart_options","color","range_min","Infinity","domain_min","domain_max","data_set","toClass","titleize","series_data","Math","min","serialize_data","bar_chart","g","groups","outer_width","outer_height","margin","top","left","bottom","right","domain_ticks","range_ticks","container","range_label","undefined","datum","s","name","words","split","array","charAt","toUpperCase","toLowerCase","slice","join","replace","Chart","options","defineAxes","afterAxes","CalendarGridChart","grid_chart","ordinal","n","rangeRoundBands","grid_padding","grid_unit_size","display_date_format","displayDate","format","toDate","parse_date_format","parseDate","date_attr","monthFormat","toMonthString","rangeValue","months","min_range","max_range","date","date_s","indexOf","range_value","min_range_zero","diff","sort","date_s1","date_s2","date1","parse","date2","getTime","y_axis_height","grid_units","elements","series_class","middle","rangeBand","getDate","applyOpacity","CompositeBarChart","y_scale_left","rangeRound","y_axis_left","tickPadding","y_scale_right","y_axis_right","ticks","day","tickFormat","tickSize","fnLine","data_series","series_values","min_domain","max_domain","line_series","bar_series","raw_bar_values","line_attrs","attr_index","findIndex","bar_attrs","bar_length","nested_extent","nestedExtent","applyLineData","bars","applyBarData","drawBarData","drawLineData","date_domain"],"mappings":"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","file":"bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _spline_stack = __webpack_require__(1);\n\t\n\tvar _spline_stack2 = _interopRequireDefault(_spline_stack);\n\t\n\tvar _calendar_grid = __webpack_require__(4);\n\t\n\tvar _calendar_grid2 = _interopRequireDefault(_calendar_grid);\n\t\n\tvar _composite = __webpack_require__(5);\n\t\n\tvar _composite2 = _interopRequireDefault(_composite);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t__webpack_require__(6);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _line = __webpack_require__(2);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// inspired by https://bl.ocks.org/mbostock/3885211\n\t\n\tvar SplineStackChart = function (_LineChart) {\n\t  _inherits(SplineStackChart, _LineChart);\n\t\n\t  function SplineStackChart() {\n\t    _classCallCheck(this, SplineStackChart);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(SplineStackChart).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(SplineStackChart, [{\n\t    key: 'afterAxes',\n\t    value: function afterAxes() {\n\t      var spline_stack = this;\n\t      spline_stack.fnArea = d3.svg.area().x(function (d, i) {\n\t        return spline_stack.x_scale(d.x);\n\t      }).y(function (d) {\n\t        return d(spline_stack.range_attr);\n\t      }).y0(function (d) {\n\t        return spline_stack.y_scale(d.y0);\n\t      }).y1(function (d) {\n\t        return spline_stack.y_scale(d.y0 + d.y);\n\t      }).interpolate(spline_stack.interpolation);\n\t\n\t      spline_stack.fnStack = d3.layout.stack().values(function (d) {\n\t        return d.values;\n\t      });\n\t\n\t      // function that returns unique color based on series_title.\n\t      spline_stack.fnColor = d3.scale.category20();\n\t    }\n\t  }, {\n\t    key: 'serializeData',\n\t    value: function serializeData(data) {\n\t      console.log(\"unserialized data\", data);\n\t      var spline_stack = this,\n\t          serialized_data = {\n\t        series: [] };\n\t\n\t      data.series.forEach(function (series, i) {\n\t        console.log(series);\n\t        // series.css_class = series.css_class || spline_stack.toClass ? spline_stack.toClass(series) : \"\";\n\t        // series.title = series.title || spline_stack.toClass ? spline_stack.titleize(series) : \"\";\n\t        if (spline_stack.domain_attr !== 'x' && spline_stack.range_attr !== 'y') {\n\t          console.log('bla');\n\t          series.values = series.map(function (value) {\n\t            return { x: value[spline_stack.domain_attr], y: value[spline_stack.range_attr], series: series };\n\t          });\n\t        }\n\t        serialized_data.series.push(series);\n\t      });\n\t      serialized_data.series = spline_stack.fnStack(serialized_data.series);\n\t      // assume all series have same domain, use first series to establish extent.\n\t      serialized_data.domain_extent = d3.extent(serialized_data.series[0].values.map(function (value) {\n\t        return value.x;\n\t      }));\n\t      // final series will have the highest y values.\n\t      serialized_data.range_max = d3.max(serialized_data.series[serialized_data.series.length - 1].values.map(function (value) {\n\t        return value.y0 + value.y;\n\t      }));\n\t      console.log(\"serialized data\", serialized_data);\n\t      return serialized_data;\n\t    }\n\t  }, {\n\t    key: 'drawData',\n\t    value: function drawData(data) {\n\t      var spline_stack = this;\n\t      data = spline_stack.serializeData(data);\n\t\n\t      // calibrate axes.\n\t      spline_stack.y_scale.domain([0, data.range_max]);\n\t      spline_stack.svg.select(\".d3-chart-range.d3-chart-axis\").call(spline_stack.y_axis);\n\t\n\t      spline_stack.x_scale.domain(data.domain_extent);\n\t      spline_stack.svg.select(\".d3-chart-domain.d3-chart-axis\").call(spline_stack.x_axis);\n\t\n\t      var stack = spline_stack.svg.selectAll(\".d3-chart-spline-stack\").data(data.series);\n\t      [stack.enter().append(\"path\"), stack.transition()].forEach(function (paths) {\n\t        spline_stack.applyData(paths);\n\t      });\n\t      stack.exit().remove();\n\t    }\n\t  }, {\n\t    key: 'applyData',\n\t    value: function applyData(paths) {\n\t      var spline_stack = this;\n\t      paths.attr(\"class\", function (series) {\n\t        \"d3-chart-spline-stack \" + series.css_class;\n\t      }).attr(\"d\", function (series) {\n\t        return spline_stack.fnArea(series.values);\n\t      }).style(\"fill\", function (series) {\n\t        return spline_stack.fnColor(series.title);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'chart_options',\n\t    get: function get() {\n\t      return Object.assign(Object.assign({}, _line2.default.DEFAULTS), {\n\t        interpolation: 'cardinal',\n\t        range_attr: 'y',\n\t        domain_attr: 'x',\n\t        time_series: true\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return SplineStackChart;\n\t}(_line2.default);\n\t\n\texports.default = SplineStackChart;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _base = __webpack_require__(3);\n\t\n\tvar _base2 = _interopRequireDefault(_base);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// inspired by https://gist.github.com/mbostock/4b66c0d9be9a0d56484e\n\t\n\tvar LineChart = function (_Chart) {\n\t  _inherits(LineChart, _Chart);\n\t\n\t  function LineChart() {\n\t    _classCallCheck(this, LineChart);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(LineChart).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LineChart, [{\n\t    key: 'defineAxes',\n\t    value: function defineAxes() {\n\t      var chart = this;\n\t\n\t      chart.y_scale = d3.scale.linear().range([chart.height, 0]);\n\t      chart.y_axis = d3.svg.axis().scale(chart.y_scale).orient(\"left\").outerTickSize(1);\n\t\n\t      if (chart.time_series) {\n\t        chart.x_scale = d3.time.scale().range([0, chart.width]);\n\t      } else {\n\t        chart.x_scale = d3.scale.linear().range([0, chart.width]);\n\t      }\n\t\n\t      chart.x_axis = d3.svg.axis().scale(chart.x_scale).orient(\"bottom\").outerTickSize(0);\n\t      //chart.x_axis.tickFormat(d3.time.format('%b %d at %H'))\n\t      //chart.x_axis.ticks(d3.time.hour, 12);\n\t\n\t      // append axes\n\t      chart.svg.append(\"g\").attr(\"class\", \"d3-chart-range d3-chart-axis\");\n\t      chart.svg.append(\"g\").attr(\"class\", \"d3-chart-domain d3-chart-axis\").attr(\"transform\", \"translate(0, \" + chart.height + \")\");\n\t    }\n\t  }, {\n\t    key: 'afterAxes',\n\t    value: function afterAxes() {\n\t      var line_chart = this;\n\t      // function that draws the lines.\n\t      line_chart.line = d3.svg.line().interpolate(line_chart.chart_options.interpolation).x(function (d) {\n\t        return line_chart.x_scale(d[line_chart.domain_attr]);\n\t      }).y(function (d) {\n\t        return line_chart.y_scale(d[line_chart.range_attr]);\n\t      });\n\t\n\t      // function that returns unique color based on series_title.\n\t      line_chart.color = d3.scale.category20();\n\t    }\n\t  }, {\n\t    key: 'serializeData',\n\t    value: function serializeData(data) {\n\t      var line_chart = this,\n\t          serialized_data = {\n\t        series: [],\n\t        range_min: Infinity,\n\t        range_max: -Infinity,\n\t        domain_min: Infinity,\n\t        domain_max: -Infinity\n\t      };\n\t\n\t      data.forEach(function (data_set) {\n\t        var series = Object.assign({\n\t          css_class: line_chart.toClass ? line_chart.toClass(data_set) : \"\",\n\t          title: line_chart.titleize ? line_chart.titleize(data_set) : \"\",\n\t          color: ''\n\t        }, data_set);\n\t\n\t        series.values.forEach(function (value) {\n\t          series_data.range_min = Math.min(series_data.range_min, value[line_chart.range_attr]);\n\t          series_data.range_max = Math.max(series_data.range_max, value[line_chart.range_attr]);\n\t          series_data.domain_min = Math.min(series_data.domain_min, value[line_chart.domain_attr]);\n\t          series_data.domain_max = Math.max(series_data.domain_max, value[line_chart.domain_attr]);\n\t        });\n\t        serialized_data.series.push(series);\n\t      });\n\t      return serialized_data;\n\t    }\n\t  }, {\n\t    key: 'drawData',\n\t    value: function drawData(data) {\n\t      var line_chart = this;\n\t      data = line_chart.serialize_data;\n\t\n\t      // calibrate axes\n\t      bar_chart.y_scale.domain([Math.min(0, data.range_min), data.range_max]);\n\t      bar_chart.svg.select(\".d3-chart-range.d3-chart-axis\").call(bar_chart.y_axis);\n\t\n\t      bar_chart.x_scale.domain([data.domain_max, Math.min(data.domain_min)]);\n\t      bar_chart.svg.select(\".d3-chart-domain.d3-chart-axis\").call(bar_chart.x_axis);\n\t\n\t      // draw lines\n\t      var line = g.selectAll(\".d3-chart-series\").data(data.series);\n\t\n\t      [line.enter().append('g'), line.transition()].forEach(function (groups) {\n\t        line_chart.applyData(groups);\n\t      });\n\t      line.exit().remove();\n\t    }\n\t  }, {\n\t    key: 'applyData',\n\t    value: function applyData(groups) {\n\t      var line_chart = this;\n\t      groups.attr('class', function (series) {\n\t        return \"d3-chart-line \" + series.css_class;\n\t      }).attr(\"title\", function (series) {\n\t        return series.title;\n\t      }).append(\"path\").attr(\"d\", function (series) {\n\t        return line_chart.line(series.values);\n\t      }).style(\"stroke\", function (series) {\n\t        return line_chart.color(series.title);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'chart_options',\n\t    get: function get() {\n\t      return {\n\t        interpolation: 'basis'\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return LineChart;\n\t}(_base2.default);\n\t\n\texports.default = LineChart;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DEFAULTS = {\n\t  outer_width: 500,\n\t  outer_height: 300,\n\t  margin: { top: 0, left: 70, bottom: 50, right: 20 },\n\t  domain_ticks: 10,\n\t  range_ticks: 8,\n\t  container: \"container\",\n\t  time_series: false,\n\t  range_label: undefined,\n\t  domain_attr: undefined,\n\t  range_attr: undefined,\n\t  titleize: function titleize(series, datum) {\n\t    var s = datum ? datum.name : series.title;\n\t    if (!s) return '';\n\t    var words = s.split(' '),\n\t        array = [];\n\t    for (var i = 0; i < words.length; ++i) {\n\t      array.push(words[i].charAt(0).toUpperCase() + words[i].toLowerCase().slice(1));\n\t    }\n\t    return array.join(' ');\n\t  },\n\t  toClass: function toClass(series) {\n\t    return series.css_class ? series.css_class.toLowerCase().replace(/\\s+/g, '-') : \"\";\n\t  }\n\t};\n\t\n\tvar Chart = function Chart(options) {\n\t  _classCallCheck(this, Chart);\n\t\n\t  var chart = this;\n\t  Object.assign(chart, chart.chart_options, options);\n\t\n\t  chart.height = chart.outer_height - chart.margin.top - chart.margin.bottom;\n\t  chart.width = chart.outer_width - chart.margin.left - chart.margin.right;\n\t\n\t  chart.svg = d3.select(chart.container).append(\"svg\").attr(\"width\", chart.outer_width).attr(\"height\", chart.outer_height).append(\"g\").attr(\"transform\", \"translate(\" + chart.margin.left + \",\" + chart.margin.top + \")\");\n\t  chart.defineAxes();\n\t  if (chart.afterAxes) chart.afterAxes();\n\t};\n\t\n\tChart.DEFAULTS = DEFAULTS;\n\t\n\texports.default = Chart;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _base = __webpack_require__(3);\n\t\n\tvar _base2 = _interopRequireDefault(_base);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// inspired by https://gist.github.com/mbostock/4b66c0d9be9a0d56484e\n\t\n\tvar CalendarGridChart = function (_Chart) {\n\t  _inherits(CalendarGridChart, _Chart);\n\t\n\t  function CalendarGridChart() {\n\t    _classCallCheck(this, CalendarGridChart);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(CalendarGridChart).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CalendarGridChart, [{\n\t    key: 'defineAxes',\n\t    value: function defineAxes() {\n\t      var grid_chart = this;\n\t\n\t      // y scale is dependent on number of months.\n\t      grid_chart.y_axis = d3.svg.axis().orient(\"left\").outerTickSize(0);\n\t      grid_chart.y_scale = d3.scale.ordinal();\n\t      grid_chart.svg.append(\"g\").attr(\"class\", \"d3-chart-range d3-chart-axis\");\n\t\n\t      grid_chart.x_scale = d3.scale.ordinal().domain(d3.range(31).map(function (n) {\n\t        return n + 1;\n\t      })).rangeRoundBands([0, grid_chart.width], grid_chart.grid_padding, 0);\n\t\n\t      grid_chart.x_axis = d3.svg.axis().scale(grid_chart.x_scale).orient(\"top\").outerTickSize(0);\n\t\n\t      // append x axis\n\t      grid_chart.svg.append(\"g\").attr(\"class\", \"d3-chart-domain d3-chart-axis\");\n\t    }\n\t  }, {\n\t    key: 'afterAxes',\n\t    value: function afterAxes() {\n\t      var grid_chart = this;\n\t      grid_chart.grid_unit_size = grid_chart.width / 31 - grid_chart.grid_padding * grid_chart.width / 30;\n\t\n\t      if (grid_chart.display_date_format) grid_chart.displayDate = d3.time.format(grid_chart.display_date_format);\n\t\n\t      if (!grid_chart.toDate && grid_chart.parse_date_format) {\n\t        grid_chart.parseDate = d3.time.format(grid_chart.parse_date_format);\n\t        grid_chart.toDate = function (datum) {\n\t          grid_chart.parseDate(datum[grid_chart.date_attr]);\n\t        };\n\t      } else if (!grid_chart.toDate) {\n\t        grid_chart.toDate = function (datum) {\n\t          return datum[grid_chart.date_attr];\n\t        };\n\t      }\n\t\n\t      grid_chart.monthFormat = d3.time.format(grid_chart.display_date_format);\n\t      grid_chart.toMonthString = function (datum) {\n\t        return grid_chart.monthFormat(grid_chart.toDate(datum));\n\t      };\n\t    }\n\t  }, {\n\t    key: 'serializeData',\n\t    value: function serializeData(data) {\n\t      var grid_chart = this;\n\t      data.css_class = data.css_class || grid_chart.toClass ? grid_chart.toClass(data) : \"\";\n\t\n\t      grid_chart.rangeValue = grid_chart.range_attr ? function (d) {\n\t        return d[grid_chart.range_attr];\n\t      } : grid_chart.rangeValue;\n\t\n\t      data.months = [];\n\t      if (data.min_range !== undefined && data.max_range !== undefined) {\n\t        data.range = { min: data.min_range, max: data.max_range };\n\t        data.values.forEach(function (value) {\n\t          var date = grid_chart.toDate(value),\n\t              date_s = grid_chart.monthFormat(date);\n\t          if (data.months.indexOf(date_s) < 0) data.months.push(date_s);\n\t        });\n\t      } else {\n\t        var min_range = Infinity,\n\t            max_range = -Infinity;\n\t        data.values.forEach(function (value) {\n\t          var date = grid_chart.toDate(value),\n\t              date_s = grid_chart.monthFormat(date),\n\t              range_value = grid_chart.rangeValue(value);\n\t          min_range = Math.min(min_range, range_value);\n\t          max_range = Math.max(max_range, range_value);\n\t          if (data.months.indexOf(date_s) < 0) data.months.push(date_s);\n\t        });\n\t        if (grid_chart.min_range_zero) min_range = Math.min(min_range, 0);\n\t        data.range = { min: min_range, max: max_range };\n\t      }\n\t      data.range.diff = data.range.max - data.range.min;\n\t\n\t      data.months = data.months.sort(function (date_s1, date_s2) {\n\t        var date1 = grid_chart.monthFormat.parse(date_s1),\n\t            date2 = grid_chart.monthFormat.parse(date_s2);\n\t        return date1.getTime() - date2.getTime();\n\t      });\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'drawData',\n\t    value: function drawData(data) {\n\t      var grid_chart = this;\n\t      data = grid_chart.serializeData(data);\n\t\n\t      // calibrate axes\n\t      var y_axis_height = grid_chart.grid_unit_size * (1 + grid_chart.grid_padding) * data.months.length;\n\t      grid_chart.y_scale.rangeRoundBands([0, y_axis_height], grid_chart.grid_padding, 0);\n\t      grid_chart.y_scale.domain(data.months);\n\t      grid_chart.y_axis.scale(grid_chart.y_scale);\n\t\n\t      grid_chart.svg.select(\".d3-chart-range\").call(grid_chart.y_axis);\n\t\n\t      grid_chart.svg.select(\".d3-chart-domain\").call(grid_chart.x_axis);\n\t\n\t      var grid_units = grid_chart.svg.selectAll(\".d3-chart-grid-unit\").data(data.values);\n\t      grid_chart.applyData(data, grid_units.enter().append(\"rect\"));\n\t      grid_chart.applyData(data, grid_units.transition());\n\t      grid_units.exit().remove();\n\t    }\n\t\n\t    // helper method for drawData.\n\t\n\t  }, {\n\t    key: 'applyData',\n\t    value: function applyData(data, elements) {\n\t      var grid_chart = this,\n\t          series_class = \"d3-chart-grid-unit \" + data.css_class;\n\t      elements.attr(\"class\", function (d) {\n\t        return series_class;\n\t      }).attr(\"y\", function (d) {\n\t        var bottom = grid_chart.y_scale(grid_chart.toMonthString(d)),\n\t            middle = grid_chart.y_scale.rangeBand() / 2 - grid_chart.grid_unit_size / 2;\n\t        return bottom + middle;\n\t      }).attr(\"height\", grid_chart.grid_unit_size).attr(\"x\", function (d) {\n\t        return grid_chart.x_scale(grid_chart.toDate(d).getDate());\n\t      }).attr(\"width\", function (d) {\n\t        return grid_chart.grid_unit_size;\n\t      }).attr('fill', grid_chart.color).attr(\"opacity\", function (d) {\n\t\n\t        return grid_chart.applyOpacity(grid_chart.rangeValue(d), data.range);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'applyOpacity',\n\t    value: function applyOpacity(value, range) {\n\t      return Math.max(0, Math.min(1, 1 - (range.max - (value - range.min)) / range.diff));\n\t    }\n\t  }, {\n\t    key: 'chart_options',\n\t    get: function get() {\n\t      var chart = this;\n\t      return Object.assign(Object.assign({}, _base2.default.DEFAULTS), {\n\t        outer_width: 800,\n\t        margin: { top: 30, left: 150, bottom: 0, right: 0 },\n\t        grid_padding: 0.05,\n\t        display_date_format: '%B %Y',\n\t        date_attr: 'date',\n\t        range_attr: 'value',\n\t        min_range_zero: false,\n\t        color: '#000'\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return CalendarGridChart;\n\t}(_base2.default);\n\t\n\texports.default = CalendarGridChart;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _base = __webpack_require__(3);\n\t\n\tvar _base2 = _interopRequireDefault(_base);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// inspired by https://gist.github.com/mbostock/4b66c0d9be9a0d56484e\n\t\n\tvar CompositeBarChart = function (_Chart) {\n\t  _inherits(CompositeBarChart, _Chart);\n\t\n\t  function CompositeBarChart() {\n\t    _classCallCheck(this, CompositeBarChart);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(CompositeBarChart).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CompositeBarChart, [{\n\t    key: 'defineAxes',\n\t    value: function defineAxes() {\n\t      var chart = this;\n\t\n\t      // Y Axis Left - Bar chart\n\t      chart.y_scale_left = d3.scale.linear().rangeRound([chart.height, 0]);\n\t      chart.y_axis_left = d3.svg.axis().scale(chart.y_scale_left).orient(\"left\").outerTickSize(1).tickPadding(5);\n\t\n\t      // Y Axis Right - Line chart\n\t      chart.y_scale_right = d3.scale.linear().range([chart.height, 0]);\n\t      chart.y_axis_right = d3.svg.axis().scale(chart.y_scale_right).orient(\"right\").outerTickSize(1);\n\t\n\t      chart.x_scale = d3.scale.ordinal().rangeRoundBands([0, chart.width], 0.2);\n\t\n\t      chart.x_axis = d3.svg.axis().scale(chart.x_scale).orient(\"bottom\").outerTickSize(1).ticks(d3.time.day, 1).tickFormat(d3.time.format('%a %d')).tickSize(1).tickPadding(15);\n\t\n\t      chart.svg.append(\"g\").attr(\"class\", \"d3-chart-range d3-chart-range-left d3-chart-axis\");\n\t      chart.svg.append(\"g\").attr(\"class\", \"d3-chart-range d3-chart-range-right d3-chart-axis\").attr(\"transform\", \"translate(\" + chart.width + \" ,0)\");\n\t      chart.svg.append(\"g\").attr(\"class\", \"d3-chart-domain d3-chart-axis\").attr(\"transform\", \"translate(0, \" + chart.height + \")\");\n\t    }\n\t  }, {\n\t    key: 'afterAxes',\n\t    value: function afterAxes() {\n\t      var chart = this;\n\t      chart.fnLine = d3.svg.line().interpolate(chart.chart_options.interpolation).x(function (d) {\n\t        return chart.x_scale(d.date) + chart.x_scale.rangeBand() / 2;\n\t      }).y(function (d) {\n\t        return chart.y_scale_right(d.value);\n\t      });\n\t\n\t      chart.fnColor = d3.scale.category20();\n\t\n\t      chart.fnStack = d3.layout.stack().values(function (d) {\n\t        return d.values;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'nestedExtent',\n\t    value: function nestedExtent(data_series, series_values, domain_attr) {\n\t      var extent = {\n\t        min_domain: Infinity,\n\t        max_domain: -Infinity,\n\t        min_range: Infinity,\n\t        max_range: -Infinity\n\t      };\n\t      data_series.forEach(function (series) {\n\t        series[series_values].forEach(function (d) {\n\t          extent.min_domain = Math.min(extent.min_domain, d.value);\n\t          extent.max_domain = Math.max(extent.max_domain, d.value);\n\t          extent.min_range = Math.min(extent.min_range, d.value);\n\t          extent.max_range = Math.max(extent.max_range, d.value);\n\t        });\n\t      });\n\t      return extent;\n\t    }\n\t  }, {\n\t    key: 'serializeData',\n\t    value: function serializeData(data) {\n\t      var chart = this,\n\t          serialized_data = {\n\t        line_series: [],\n\t        bar_series: [],\n\t        raw_bar_values: []\n\t      };\n\t\n\t      serialized_data.domain_extent = data.series.map(function (d) {\n\t        return d.date;\n\t      });\n\t\n\t      data.series.forEach(function (series, i) {\n\t        series.values = series.values.map(function (value) {\n\t\n\t          // serialize attributes for line graph\n\t          chart.line_attrs.forEach(function (attr) {\n\t            var attr_index = serialized_data.line_series.findIndex(function (x) {\n\t              return x.name === attr;\n\t            });\n\t            // Check if Object with specified date already exists. If yes, append values\n\t\n\t            if (attr_index < 0) {\n\t              serialized_data.line_series.push({\n\t                name: attr,\n\t                values: [{\n\t                  date: series.date,\n\t                  value: value[attr]\n\t                }]\n\t              });\n\t            } else {\n\t              serialized_data.line_series[attr_index].values.push({\n\t                date: series.date,\n\t                value: value[attr]\n\t              });\n\t            }\n\t          });\n\t\n\t          // Serialize bar data and group by attribute\n\t          chart.bar_attrs.forEach(function (attr) {\n\t            var attr_index = serialized_data.bar_series.findIndex(function (x) {\n\t              return x.name === attr;\n\t            });\n\t            // Check if Object with specified date already exists. If yes, append values\n\t\n\t            if (attr_index < 0) {\n\t              serialized_data.bar_series.push({\n\t                name: attr,\n\t                values: [{\n\t                  x: series.date,\n\t                  y: value[attr]\n\t                }]\n\t              });\n\t            } else {\n\t              serialized_data.bar_series[attr_index].values.push({\n\t                x: series.date,\n\t                y: value[attr]\n\t              });\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stack layout of Bar data, adds y0 value to each datum\n\t      data.bar_series = chart.fnStack(serialized_data.bar_series);\n\t\n\t      serialized_data.bar_series.forEach(function (series) {\n\t        if (!serialized_data.bar_length || serialized_data.bar_length < series.values.length) serialized_data.bar_length = series.values.length;\n\t        series.values.forEach(function (i) {\n\t          serialized_data.raw_bar_values.push(i.y0 + i.y);\n\t        });\n\t      });\n\t\n\t      return serialized_data;\n\t    }\n\t  }, {\n\t    key: 'drawLineData',\n\t    value: function drawLineData(data) {\n\t      var chart = this;\n\t\n\t      // calibrate axes\n\t      var nested_extent = chart.nestedExtent(data.line_series, 'values', chart.domain_attr);\n\t      chart.y_scale_right.domain([nested_extent.min_domain, nested_extent.max_domain]);\n\t      chart.svg.select(\".d3-chart-range-right\").call(chart.y_axis_right);\n\t\n\t      // draw lines\n\t      var line = chart.svg.selectAll(\".d3-chart-line\").data(data.line_series);\n\t\n\t      chart.applyLineData(line.enter().append('g').attr(\"class\", \"line\"), line.transition());\n\t      line.exit().remove();\n\t    }\n\t  }, {\n\t    key: 'applyLineData',\n\t    value: function applyLineData(groups) {\n\t      var chart = this;\n\t      groups.attr(\"title\", function (d) {\n\t        return d.name;\n\t      }).attr(\"class\", \"line\");\n\t      chart.svg.selectAll(\".line\").append(\"path\").style(\"stroke\", function (d) {\n\t        return chart.fnColor(d.name);\n\t      }).attr(\"d\", function (d) {\n\t        return chart.fnLine(d.values);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'drawBarData',\n\t    value: function drawBarData(data) {\n\t      var chart = this;\n\t\n\t      chart.y_scale_left.domain([0, d3.max(data.raw_bar_values)]);\n\t      chart.svg.select(\".d3-chart-range-left\").call(chart.y_axis_left);\n\t\n\t      var bars = chart.svg.selectAll(\".d3-chart-bar\").data(data.bar_series).enter().append(\"g\").attr(\"class\", \"bar-layer\").style(\"fill\", function (d, i) {\n\t        return chart.fnColor(i);\n\t      }).style(\"fill-opacity\", \"0.7\");\n\t\n\t      data.bar_series.forEach(function (series) {\n\t        chart.applyBarData(bars.selectAll(\"rect\").data(function (d) {\n\t          return d.values;\n\t        }).enter().append(\"rect\"), data.bar_length);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'applyBarData',\n\t    value: function applyBarData(elements, bar_length) {\n\t      var chart = this;\n\t      elements.attr(\"width\", chart.x_scale.rangeBand()).attr(\"height\", function (d) {\n\t        return chart.y_scale_left(d.y0) - chart.y_scale_left(d.y + d.y0);\n\t      }).attr(\"x\", function (d) {\n\t        return chart.x_scale(d.x);\n\t      }).attr(\"y\", function (d) {\n\t        return chart.y_scale_left(d.y + d.y0);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'drawData',\n\t    value: function drawData(data) {\n\t      var chart = this;\n\t      data = chart.serializeData(data);\n\t\n\t      chart.x_scale.domain(data.domain_extent);\n\t      chart.svg.select(\".d3-chart-domain.d3-chart-axis\").call(chart.x_axis);\n\t\n\t      chart.drawBarData(data);\n\t      chart.drawLineData(data);\n\t    }\n\t  }, {\n\t    key: 'chart_options',\n\t    get: function get() {\n\t      return Object.assign(Object.assign({}, _base2.default.DEFAULTS), {\n\t        interpolation: 'linear',\n\t        date_domain: true,\n\t        domain_attr: 'date'\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return CompositeBarChart;\n\t}(_base2.default);\n\t\n\texports.default = CompositeBarChart;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7398e4964ef460fae7f0\n **/","require('./style.scss');\n\nimport SplineStackChart from './line/spline_stack';\nimport CalendarGridChart from './grid/calendar_grid';\nimport CompositeBarChart from './bar/composite';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","import LineChart from './line';\n\n// inspired by https://bl.ocks.org/mbostock/3885211\nclass SplineStackChart extends LineChart {\n\n  get chart_options(){\n    return Object.assign(Object.assign({}, LineChart.DEFAULTS), {\n      interpolation: 'cardinal',\n      range_attr: 'y',\n      domain_attr: 'x',\n      time_series: true\n    });\n  }\n\n  afterAxes(){\n    var spline_stack = this;\n    spline_stack.fnArea = d3.svg.area()\n        .x(function(d, i) { return spline_stack.x_scale(d.x); })\n        .y(function(d) { return d(spline_stack.range_attr); })\n        .y0(function(d) { return spline_stack.y_scale(d.y0); })\n        .y1(function(d) { return spline_stack.y_scale(d.y0 + d.y); })\n        .interpolate(spline_stack.interpolation);\n\n    spline_stack.fnStack = d3.layout.stack()\n        .values(function(d) { return d.values; });\n\n    // function that returns unique color based on series_title.\n    spline_stack.fnColor = d3.scale.category20();\n  }\n\n  serializeData(data){\n    console.log(\"unserialized data\", data);\n    var spline_stack = this,\n      serialized_data = {\n        series: [] };\n\n    data.series.forEach(function(series, i){\n      console.log(series);\n      // series.css_class = series.css_class || spline_stack.toClass ? spline_stack.toClass(series) : \"\";\n      // series.title = series.title || spline_stack.toClass ? spline_stack.titleize(series) : \"\";\n      if (spline_stack.domain_attr !== 'x' && spline_stack.range_attr !== 'y'){\n        console.log('bla');\n        series.values = series.map((value)=>{\n          return {x: value[spline_stack.domain_attr], y: value[spline_stack.range_attr], series: series};\n        });\n      }\n      serialized_data.series.push(series);\n    });\n    serialized_data.series = spline_stack.fnStack(serialized_data.series);\n    // assume all series have same domain, use first series to establish extent.\n    serialized_data.domain_extent = d3.extent(serialized_data.series[0].values.map((value)=>{ return value.x; }));\n    // final series will have the highest y values.\n    serialized_data.range_max = d3.max(serialized_data.series[serialized_data.series.length - 1].values.map((value)=>{ return value.y0 + value.y; }))\n    console.log(\"serialized data\", serialized_data);\n    return serialized_data;\n  };\n\n  drawData(data){\n    var spline_stack = this;\n    data = spline_stack.serializeData(data);\n\n    // calibrate axes.\n    spline_stack.y_scale.domain([0, data.range_max]);\n    spline_stack.svg.select(\".d3-chart-range.d3-chart-axis\")\n      .call(spline_stack.y_axis);\n\n    spline_stack.x_scale.domain(data.domain_extent);\n    spline_stack.svg.select(\".d3-chart-domain.d3-chart-axis\").call(spline_stack.x_axis);\n\n    var stack = spline_stack.svg.selectAll(\".d3-chart-spline-stack\")\n        .data(data.series);\n    [stack.enter().append(\"path\"), stack.transition()].forEach((paths)=>{\n      spline_stack.applyData(paths);\n    });\n    stack.exit().remove();\n  }\n\n  applyData(paths){\n    var spline_stack = this;\n    paths\n      .attr(\"class\", function(series){\"d3-chart-spline-stack \" + series.css_class;})\n      .attr(\"d\", function(series){ return spline_stack.fnArea(series.values); })\n      .style(\"fill\", function(series){ return spline_stack.fnColor(series.title); });\n  }\n}\n\nexport default SplineStackChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/line/spline_stack.js\n **/","import Chart from './../base';\n\n\n// inspired by https://gist.github.com/mbostock/4b66c0d9be9a0d56484e\nclass LineChart extends Chart {\n\n  get chart_options(){\n    return {\n      interpolation: 'basis'\n    };\n  }\n\n  defineAxes(){\n    var chart = this;\n\n    chart.y_scale = d3.scale.linear()\n      .range([chart.height, 0]);\n    chart.y_axis = d3.svg.axis()\n      .scale(chart.y_scale)\n      .orient(\"left\")\n      .outerTickSize(1);\n\n    if (chart.time_series){\n      chart.x_scale = d3.time.scale()\n        .range([0, chart.width]);\n    } else {\n      chart.x_scale = d3.scale.linear()\n        .range([0, chart.width]);\n    }\n\n    chart.x_axis = d3.svg.axis()\n      .scale(chart.x_scale)\n      .orient(\"bottom\")\n      .outerTickSize(0)\n    //chart.x_axis.tickFormat(d3.time.format('%b %d at %H'))\n    //chart.x_axis.ticks(d3.time.hour, 12);\n\n    // append axes\n    chart.svg.append(\"g\")\n        .attr(\"class\", \"d3-chart-range d3-chart-axis\");\n    chart.svg.append(\"g\")\n        .attr(\"class\", \"d3-chart-domain d3-chart-axis\")\n        .attr(\"transform\", \"translate(0, \" + (chart.height) + \")\");\n  }\n\n  afterAxes(){\n    var line_chart = this;\n    // function that draws the lines.\n    line_chart.line = d3.svg.line()\n      .interpolate(line_chart.chart_options.interpolation)\n      .x(function(d){ return line_chart.x_scale(d[line_chart.domain_attr]); })\n      .y(function(d){ return line_chart.y_scale(d[line_chart.range_attr]); });\n\n    // function that returns unique color based on series_title.\n    line_chart.color = d3.scale.category20();\n  }\n\n  serializeData(data){\n    var line_chart = this,\n      serialized_data = {\n        series: [],\n        range_min: Infinity,\n        range_max: -Infinity,\n        domain_min: Infinity,\n        domain_max: -Infinity,\n      };\n\n    data.forEach(function(data_set){\n      var series = Object.assign({\n          css_class: line_chart.toClass ? line_chart.toClass(data_set) : \"\",\n          title: line_chart.titleize ? line_chart.titleize(data_set) : \"\",\n          color: ''\n        }, data_set);\n\n      series.values.forEach((value)=>{\n        series_data.range_min = Math.min(series_data.range_min, value[line_chart.range_attr]);\n        series_data.range_max = Math.max(series_data.range_max, value[line_chart.range_attr]);\n        series_data.domain_min = Math.min(series_data.domain_min, value[line_chart.domain_attr]);\n        series_data.domain_max = Math.max(series_data.domain_max, value[line_chart.domain_attr]);\n      });\n      serialized_data.series.push(series);\n    });\n    return serialized_data;\n  };\n\n  drawData(data){\n    var line_chart = this;\n    data = line_chart.serialize_data;\n\n    // calibrate axes\n    bar_chart.y_scale.domain([Math.min(0, data.range_min), data.range_max]);\n    bar_chart.svg.select(\".d3-chart-range.d3-chart-axis\")\n      .call(bar_chart.y_axis);\n\n    bar_chart.x_scale.domain([data.domain_max, Math.min(data.domain_min)]);\n    bar_chart.svg.select(\".d3-chart-domain.d3-chart-axis\").call(bar_chart.x_axis);\n\n    // draw lines\n    var line = g.selectAll(\".d3-chart-series\")\n        .data(data.series);\n\n    [line.enter().append('g'), line.transition()].forEach((groups)=>{\n      line_chart.applyData(groups);\n    });\n    line.exit().remove();\n  }\n\n  applyData(groups){\n    var line_chart = this;\n    groups\n      .attr('class', function(series){ return \"d3-chart-line \" + series.css_class; })\n      .attr(\"title\", function(series){ return series.title; })\n      .append(\"path\")\n        .attr(\"d\", function(series){ return line_chart.line(series.values); })\n        .style(\"stroke\", function(series){ return line_chart.color(series.title); });\n  }\n\n}\n\nexport default LineChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/line/line.js\n **/","const DEFAULTS = {\n  outer_width: 500,\n  outer_height: 300,\n  margin: {top: 0, left: 70, bottom: 50, right: 20},\n  domain_ticks: 10,\n  range_ticks: 8,\n  container: \"container\",\n  time_series: false,\n  range_label: undefined,\n  domain_attr: undefined,\n  range_attr: undefined,\n  titleize: function(series, datum){\n    var s = datum ? datum.name : series.title;\n    if (!s) return '';\n    var words = s.split(' '),\n      array = [];\n    for (var i=0; i<words.length; ++i) {\n      array.push(words[i].charAt(0).toUpperCase() + words[i].toLowerCase().slice(1));\n    }\n    return array.join(' ');\n  },\n  toClass: function(series){\n    return series.css_class ? series.css_class.toLowerCase().replace(/\\s+/g, '-') : \"\";\n  }\n};\n\n\nclass Chart {\n\n  constructor(options){\n    var chart = this;\n    Object.assign(chart, chart.chart_options, options);\n\n    chart.height = chart.outer_height - chart.margin.top - chart.margin.bottom;\n    chart.width = chart.outer_width - chart.margin.left - chart.margin.right;\n\n    chart.svg = d3.select(chart.container).append(\"svg\")\n        .attr(\"width\", chart.outer_width)\n        .attr(\"height\", chart.outer_height)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + chart.margin.left + \",\" + chart.margin.top + \")\");\n    chart.defineAxes();\n    if (chart.afterAxes) chart.afterAxes();\n  }\n\n}\n\nChart.DEFAULTS = DEFAULTS;\n\nexport default Chart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/base.js\n **/","import Chart from './../base';\n\n// inspired by https://gist.github.com/mbostock/4b66c0d9be9a0d56484e\nclass CalendarGridChart extends Chart{\n\n  get chart_options(){\n    var chart = this;\n    return Object.assign(Object.assign({}, Chart.DEFAULTS), {\n      outer_width: 800,\n      margin: {top: 30, left: 150, bottom: 0, right: 0},\n      grid_padding: 0.05,\n      display_date_format: '%B %Y',\n      date_attr: 'date',\n      range_attr: 'value',\n      min_range_zero: false,\n      color: '#000',\n    })\n  }\n\n  defineAxes(){\n    var grid_chart = this;\n\n    // y scale is dependent on number of months.\n    grid_chart.y_axis = d3.svg.axis().orient(\"left\").outerTickSize(0);\n    grid_chart.y_scale = d3.scale.ordinal()\n    grid_chart.svg.append(\"g\")\n        .attr(\"class\", \"d3-chart-range d3-chart-axis\");\n\n    grid_chart.x_scale = d3.scale.ordinal()\n      .domain(d3.range(31).map((n)=>{ return n+1; }))\n      .rangeRoundBands([0, grid_chart.width], grid_chart.grid_padding, 0);\n\n    grid_chart.x_axis = d3.svg.axis()\n      .scale(grid_chart.x_scale)\n      .orient(\"top\")\n      .outerTickSize(0);\n\n    // append x axis\n    grid_chart.svg.append(\"g\").attr(\"class\", \"d3-chart-domain d3-chart-axis\");\n  }\n\n  afterAxes(){\n    var grid_chart = this;\n    grid_chart.grid_unit_size = grid_chart.width / 31 - grid_chart.grid_padding * grid_chart.width / 30;\n\n    if (grid_chart.display_date_format) grid_chart.displayDate = d3.time.format(grid_chart.display_date_format);\n\n    if (!grid_chart.toDate && grid_chart.parse_date_format){\n      grid_chart.parseDate = d3.time.format(grid_chart.parse_date_format);\n      grid_chart.toDate = (datum)=>{\n        grid_chart.parseDate(datum[grid_chart.date_attr]);\n      }\n    } else if (!grid_chart.toDate){\n      grid_chart.toDate = (datum)=>{ return datum[grid_chart.date_attr] };\n    }\n\n    grid_chart.monthFormat = d3.time.format(grid_chart.display_date_format);\n    grid_chart.toMonthString = (datum)=>{\n      return grid_chart.monthFormat(grid_chart.toDate(datum));\n    }\n  }\n\n  serializeData(data){\n    var grid_chart = this;\n    data.css_class = data.css_class || grid_chart.toClass ? grid_chart.toClass(data) : \"\";\n\n    grid_chart.rangeValue = grid_chart.range_attr ? function(d){ return d[grid_chart.range_attr]; } : grid_chart.rangeValue;\n\n    data.months = [];\n    if (data.min_range !== undefined && data.max_range !== undefined){\n      data.range = {min: data.min_range, max: data.max_range};\n      data.values.forEach((value)=>{\n        var date = grid_chart.toDate(value),\n          date_s = grid_chart.monthFormat(date);\n        if (data.months.indexOf(date_s) < 0) data.months.push(date_s);\n      });\n    } else {\n      var min_range = Infinity,\n        max_range = -Infinity;\n      data.values.forEach((value)=>{\n        var date = grid_chart.toDate(value),\n          date_s = grid_chart.monthFormat(date),\n          range_value = grid_chart.rangeValue(value);\n        min_range = Math.min(min_range, range_value);\n        max_range = Math.max(max_range, range_value);\n        if (data.months.indexOf(date_s) < 0) data.months.push(date_s);\n      });\n      if (grid_chart.min_range_zero) min_range = Math.min(min_range, 0);\n      data.range = { min: min_range, max: max_range };\n    }\n    data.range.diff = data.range.max - data.range.min;\n\n    data.months = data.months.sort((date_s1, date_s2)=>{\n      var date1 = grid_chart.monthFormat.parse(date_s1),\n        date2 = grid_chart.monthFormat.parse(date_s2);\n      return date1.getTime() - date2.getTime();\n    });\n    return data;\n  };\n\n  drawData(data){\n    var grid_chart = this;\n    data = grid_chart.serializeData(data);\n\n    // calibrate axes\n    var y_axis_height = grid_chart.grid_unit_size * (1 + grid_chart.grid_padding) * data.months.length;\n    grid_chart.y_scale.rangeRoundBands([0, y_axis_height], grid_chart.grid_padding, 0);\n    grid_chart.y_scale.domain(data.months);\n    grid_chart.y_axis.scale(grid_chart.y_scale);\n\n    grid_chart.svg.select(\".d3-chart-range\")\n      .call(grid_chart.y_axis);\n\n    grid_chart.svg.select(\".d3-chart-domain\").call(grid_chart.x_axis);\n\n   var grid_units = grid_chart.svg.selectAll(\".d3-chart-grid-unit\")\n        .data(data.values);\n    grid_chart.applyData(data, grid_units.enter().append(\"rect\"));\n    grid_chart.applyData(data, grid_units.transition());\n    grid_units.exit().remove();\n  }\n\n  // helper method for drawData.\n  applyData(data, elements){\n    var grid_chart = this,\n        series_class = \"d3-chart-grid-unit \" + data.css_class;\n      elements\n          .attr(\"class\", function(d){ return series_class; })\n          .attr(\"y\", function(d) {\n            var bottom = grid_chart.y_scale(grid_chart.toMonthString(d)),\n              middle = grid_chart.y_scale.rangeBand() / 2 - grid_chart.grid_unit_size / 2;\n            return bottom + middle;\n          })\n          .attr(\"height\", grid_chart.grid_unit_size)\n          .attr(\"x\", function(d) {\n            return grid_chart.x_scale(grid_chart.toDate(d).getDate());\n          })\n          .attr(\"width\", function(d) { return grid_chart.grid_unit_size; })\n          .attr('fill', grid_chart.color)\n          .attr(\"opacity\", function(d) {\n\n             return grid_chart.applyOpacity(grid_chart.rangeValue(d), data.range);\n           });\n  }\n\n  applyOpacity(value, range){\n    return Math.max(0, Math.min(1, 1 - (range.max - (value - range.min)) / range.diff));\n  };\n\n}\n\nexport default CalendarGridChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/grid/calendar_grid.js\n **/","import Chart from './../base';\n\n// inspired by https://gist.github.com/mbostock/4b66c0d9be9a0d56484e\nclass CompositeBarChart extends Chart {\n\n  get chart_options() {\n    return Object.assign(Object.assign({}, Chart.DEFAULTS), {\n      interpolation: 'linear',\n      date_domain: true,\n      domain_attr: 'date'\n    });\n  }\n\n  defineAxes() {\n    var chart = this;\n\n    // Y Axis Left - Bar chart\n    chart.y_scale_left = d3.scale.linear()\n      .rangeRound([chart.height, 0]);\n    chart.y_axis_left = d3.svg.axis()\n      .scale(chart.y_scale_left)\n      .orient(\"left\")\n      .outerTickSize(1)\n      .tickPadding(5);\n\n    // Y Axis Right - Line chart\n    chart.y_scale_right = d3.scale.linear()\n      .range([chart.height, 0]);\n    chart.y_axis_right = d3.svg.axis()\n      .scale(chart.y_scale_right)\n      .orient(\"right\")\n      .outerTickSize(1);\n\n    chart.x_scale = d3.scale.ordinal()\n      .rangeRoundBands([0, chart.width], 0.2);\n\n    chart.x_axis = d3.svg.axis()\n      .scale(chart.x_scale)\n      .orient(\"bottom\")\n      .outerTickSize(1)\n      .ticks(d3.time.day, 1)\n      .tickFormat(d3.time.format('%a %d'))\n      .tickSize(1)\n      .tickPadding(15);\n\n    chart.svg.append(\"g\")\n      .attr(\"class\", \"d3-chart-range d3-chart-range-left d3-chart-axis\");\n    chart.svg.append(\"g\")\n      .attr(\"class\", \"d3-chart-range d3-chart-range-right d3-chart-axis\")\n      .attr(\"transform\", \"translate(\" + (chart.width) + \" ,0)\");\n    chart.svg.append(\"g\")\n      .attr(\"class\", \"d3-chart-domain d3-chart-axis\")\n      .attr(\"transform\", \"translate(0, \" + (chart.height) + \")\");\n  }\n\n  afterAxes() {\n    var chart = this;\n    chart.fnLine = d3.svg.line()\n      .interpolate(chart.chart_options.interpolation)\n      .x(function(d) {\n        return chart.x_scale(d.date) + chart.x_scale.rangeBand() / 2;\n      })\n      .y(function(d) {\n        return chart.y_scale_right(d.value);\n      });\n\n    chart.fnColor = d3.scale.category20();\n\n    chart.fnStack = d3.layout.stack()\n      .values(function(d) {\n        return d.values;\n      });\n  }\n\n  nestedExtent(data_series, series_values, domain_attr) {\n    var extent = {\n      min_domain: Infinity,\n      max_domain: -Infinity,\n      min_range: Infinity,\n      max_range: -Infinity\n    };\n    data_series.forEach((series) => {\n      series[series_values].forEach((d) => {\n        extent.min_domain = Math.min(extent.min_domain, d.value);\n        extent.max_domain = Math.max(extent.max_domain, d.value);\n        extent.min_range = Math.min(extent.min_range, d.value);\n        extent.max_range = Math.max(extent.max_range, d.value);\n      });\n    });\n    return extent;\n  }\n\n  serializeData(data) {\n    var chart = this,\n      serialized_data = {\n        line_series: [],\n        bar_series: [],\n        raw_bar_values: [],\n      };\n\n    serialized_data.domain_extent = data.series.map((d) => {\n      return d.date\n    });\n\n    data.series.forEach(function(series, i) {\n      series.values = series.values.map((value) => {\n\n        // serialize attributes for line graph\n        chart.line_attrs.forEach(function(attr) {\n          var attr_index = serialized_data.line_series.findIndex(x => x.name === attr);\n          // Check if Object with specified date already exists. If yes, append values\n\n          if (attr_index < 0) {\n            serialized_data.line_series.push({\n              name: attr,\n              values: [{\n                date: series.date,\n                value: value[attr]\n              }]\n            });\n          } else {\n            serialized_data.line_series[attr_index].values.push({\n              date: series.date,\n              value: value[attr]\n            });\n          }\n        });\n\n        // Serialize bar data and group by attribute\n        chart.bar_attrs.forEach(function(attr) {\n          var attr_index = serialized_data.bar_series.findIndex(x => x.name === attr);\n          // Check if Object with specified date already exists. If yes, append values\n\n          if (attr_index < 0) {\n            serialized_data.bar_series.push({\n              name: attr,\n              values: [{\n                x: series.date,\n                y: value[attr]\n              }]\n            });\n          } else {\n            serialized_data.bar_series[attr_index].values.push({\n              x: series.date,\n              y: value[attr]\n            });\n          }\n        });\n      });\n    });\n\n    // Stack layout of Bar data, adds y0 value to each datum\n    data.bar_series = chart.fnStack(serialized_data.bar_series);\n\n    serialized_data.bar_series.forEach(function(series) {\n      if (!serialized_data.bar_length || serialized_data.bar_length < series.values.length) serialized_data.bar_length = series.values.length;\n      series.values.forEach(function(i) {\n        serialized_data.raw_bar_values.push(i.y0 + i.y)\n      })\n    });\n\n    return serialized_data;\n  };\n\n  drawLineData(data) {\n    var chart = this;\n\n    // calibrate axes\n    var nested_extent = chart.nestedExtent(data.line_series, 'values', chart.domain_attr);\n    chart.y_scale_right.domain([nested_extent.min_domain, nested_extent.max_domain]);\n    chart.svg.select(\".d3-chart-range-right\")\n      .call(chart.y_axis_right);\n\n    // draw lines\n    var line = chart.svg.selectAll(\".d3-chart-line\")\n      .data(data.line_series);\n\n    chart.applyLineData(line.enter().append('g').attr(\"class\", \"line\"), line.transition());\n    line.exit().remove();\n  }\n\n  applyLineData(groups) {\n    var chart = this;\n    groups\n      .attr(\"title\", function(d) {\n        return d.name;\n      })\n      .attr(\"class\", \"line\");\n    chart.svg.selectAll(\".line\")\n      .append(\"path\")\n      .style(\"stroke\", function(d) {\n        return chart.fnColor(d.name);\n      })\n      .attr(\"d\", function(d) {\n        return chart.fnLine(d.values);\n      });\n  }\n\n  drawBarData(data) {\n    var chart = this;\n\n    chart.y_scale_left.domain([0, d3.max(data.raw_bar_values)]);\n    chart.svg.select(\".d3-chart-range-left\").call(chart.y_axis_left);\n\n    var bars = chart.svg.selectAll(\".d3-chart-bar\")\n      .data(data.bar_series)\n      .enter().append(\"g\")\n      .attr(\"class\", \"bar-layer\")\n      .style(\"fill\", function(d, i) {\n        return chart.fnColor(i);\n      })\n      .style(\"fill-opacity\", \"0.7\");\n\n    data.bar_series.forEach(function(series) {\n      chart.applyBarData(bars\n        .selectAll(\"rect\")\n        .data(function(d) {\n          return d.values;\n        })\n        .enter().append(\"rect\"), data.bar_length);\n    });\n  }\n\n  applyBarData(elements, bar_length) {\n    var chart = this;\n    elements\n      .attr(\"width\", chart.x_scale.rangeBand())\n      .attr(\"height\", function(d) {\n        return chart.y_scale_left(d.y0) - chart.y_scale_left(d.y + d.y0);\n      })\n      .attr(\"x\", function(d) {\n        return chart.x_scale(d.x);\n      })\n      .attr(\"y\", function(d) {\n        return chart.y_scale_left(d.y + d.y0);\n      });\n  }\n\n  drawData(data) {\n    var chart = this;\n    data = chart.serializeData(data);\n\n    chart.x_scale.domain(data.domain_extent);\n    chart.svg.select(\".d3-chart-domain.d3-chart-axis\").call(chart.x_axis);\n\n    chart.drawBarData(data);\n    chart.drawLineData(data);\n  }\n}\n\nexport default CompositeBarChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bar/composite.js\n **/"],"sourceRoot":""}